spring.application.name=invoicebackend

# Default to 'dev' profile which uses H2 in-memory + Flyway
spring.profiles.active=dev

# Common JPA and Hibernate settings
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
# For profile-specific ddl-auto, see application-*.properties; validate for dev to ensure Flyway controls schema
# spring.jpa.hibernate.ddl-auto is profile-specific

# Flyway common settings (enabled by default; will pick up profile-specific datasource)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
# Allow creating schema automatically if not present (Postgres)
spring.flyway.create-schemas=true
# For Postgres schema selection, see application-prod.properties

# Actuator Configuration (keep available)
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.probes.enabled=true

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Respect X-Forwarded-* / Forwarded headers so redirects preserve external scheme/host/port
server.forward-headers-strategy=framework

# ====== Application Security Settings ======
# IMPORTANT: These must be set in environment for production. Do not hardcode secrets.
# Set via container env: JWT_SECRET, JWT_EXP_MINUTES, ADMIN_EMAIL, ADMIN_PASSWORD
app.jwt.secret=${JWT_SECRET:change-this-in-env-please-change-to-long-random}
app.jwt.exp.minutes=${JWT_EXP_MINUTES:60}
app.admin.email=${ADMIN_EMAIL:}
app.admin.password=${ADMIN_PASSWORD:}

# CORS allowed origins (comma-separated). Maps to env CORS_ALLOWED_ORIGINS
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}

# ====== Storage Settings (env-driven) ======
# STORAGE_PROVIDER: local | s3 | azure (default local)
app.storage.provider=${STORAGE_PROVIDER:local}
# Local storage base path (used when provider=local)
app.storage.local.path=${STORAGE_LOCAL_PATH:attachments}
# S3 (only read when provider=s3)
app.storage.s3.bucket=${S3_BUCKET:}
app.storage.s3.region=${S3_REGION:}
app.storage.s3.accessKey=${S3_ACCESS_KEY:}
app.storage.s3.secretKey=${S3_SECRET_KEY:}
# Azure (only read when provider=azure)
app.storage.azure.connection=${AZURE_CONN:}

# ====== Reminder & Messaging Defaults ======
# Cron for reminder job (default: every 30 minutes)
REMINDER_CRON=0 0/30 * * * *
# Base URL for invoice links in reminders
BASE_URL=${SITE_URL:http://localhost:8080}

# Providers: noop|smtp|sendgrid for email; noop|twilio|vonage for sms; noop|meta|twilio for WhatsApp
EMAIL_PROVIDER=${EMAIL_PROVIDER:noop}
SMS_PROVIDER=${SMS_PROVIDER:noop}
WHATSAPP_PROVIDER=${WHATSAPP_PROVIDER:noop}

# Email settings
EMAIL_FROM=${EMAIL_FROM:no-reply@example.com}
SMTP_HOST=${SMTP_HOST:}
SMTP_PORT=${SMTP_PORT:0}
SMTP_USER=${SMTP_USER:}
SMTP_PASSWORD=${SMTP_PASSWORD:}
SENDGRID_API_KEY=${SENDGRID_API_KEY:}

# SMS settings
SMS_FROM=${SMS_FROM:+10000000000}
TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID:}
TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN:}
VONAGE_API_KEY=${VONAGE_API_KEY:}
VONAGE_API_SECRET=${VONAGE_API_SECRET:}

# WhatsApp settings
WHATSAPP_FROM=${WHATSAPP_FROM:+10000000000}
META_WA_TOKEN=${META_WA_TOKEN:}
META_WA_PHONE_ID=${META_WA_PHONE_ID:}

# ====== Webhook Settings ======
# Toggle outgoing publisher
app.webhooks.outgoing.enabled=${WEBHOOKS_OUTGOING_ENABLED:false}
# Default secret for outgoing signing (used if subscription has no secret). Also used as placeholder for incoming verification.
app.webhooks.outgoing.defaultSecret=${WEBHOOK_OUTGOING_SIGNING_SECRET:}
