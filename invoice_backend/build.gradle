plugins {
	id 'java'
	id 'checkstyle'
	id 'org.springframework.boot' version '3.4.8'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.1.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// Security + Validation
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-json'

	// JWT (jjwt api, impl, jackson)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Flyway for database migrations
	implementation 'org.flywaydb:flyway-core'

	// Keep H2 for development profile
	runtimeOnly 'com.h2database:h2'

	// PostgreSQL driver for production profile
	runtimeOnly 'org.postgresql:postgresql'

	// PDF generation (OpenHTMLtoPDF) and iText/OpenPDF deps
	implementation 'com.openhtmltopdf:openhtmltopdf-core:1.0.10'
	implementation 'com.openhtmltopdf:openhtmltopdf-pdfbox:1.0.10'
	implementation 'commons-io:commons-io:2.15.1'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

checkstyle {
	toolVersion = '10.17.0'
	configFile = file("$projectDir/config/checkstyle/checkstyle.xml")
	// Do not fail the build in this MVP stage; CI can be adjusted later
	ignoreFailures = true
}

tasks.withType(Checkstyle) {
	reports {
		xml.required = false
		html.required = true
	}
}
