{"is_source_file": true, "format": "Java", "description": "This file contains a utility class 'DtoMappers' that provides static methods for mapping between data transfer objects (DTOs) and entity models in the invoice backend web layer. It includes methods for converting entities like Partner, Template, and Invoice to their respective response DTOs, and for applying updates from request DTOs to entity models. The class facilitates data transformation and normalization between different layers of the application.", "external_files": ["com.example.invoicebackend.model.Partner", "com.example.invoicebackend.model.Template", "com.example.invoicebackend.model.Invoice", "com.example.invoicebackend.model.InvoiceItem", "com.example.invoicebackend.web.dto.InvoiceDtos.InvoiceResponse", "com.example.invoicebackend.web.dto.PartnerDtos.PartnerResponse", "com.example.invoicebackend.web.dto.TemplateDtos.TemplateResponse", "com.example.invoicebackend.web.dto.InvoiceDtos.InvoiceItemRequest", "com.example.invoicebackend.web.dto.InvoiceDtos.InvoiceUpdateRequest", "com.example.invoicebackend.model.enums.InvoiceStatus"], "external_methods": ["p.getId()", "p.getName()", "p.getLegalName()", "p.getEmail()", "p.getPhone()", "p.getCity()", "p.getCountry()", "p.isDeleted()", "t.getId()", "t.getPartner()", "t.getName()", "t.getTemplateType()", "t.isDefault()", "inv.getId()", "inv.getInvoiceNumber()", "inv.getCurrency()", "inv.getIssueDate()", "inv.getDueDate()", "inv.getStatus()", "inv.getSubtotalAmount()", "inv.getTaxAmount()", "inv.getDiscountAmount()", "inv.getTotalAmount()", "item.setItemName()", "item.setItemDescription()", "item.setQuantity()", "item.setUnitPrice()", "item.recalcLineTotal()", "invoice.setInvoiceNumber()", "invoice.setCurrency()", "invoice.setIssueDate()", "invoice.setDueDate()", "invoice.setStatus()", "invoice.setTaxAmount()", "invoice.setDiscountAmount()", "invoice.setNotes()", "invoice.getStatus()", "invoice.setStatus(InvoiceStatus.DRAFT)", "invoice.getSubtotalAmount()", "invoice.setSubtotalAmount()", "invoice.getTaxAmount()", "invoice.setTaxAmount()", "invoice.getDiscountAmount()", "invoice.setDiscountAmount()", "invoice.getTotalAmount()", "invoice.setTotalAmount()"], "published": ["com.example.invoicebackend.web.mapper.DtoMappers"], "classes": [{"name": "DtoMappers", "description": "A utility class with static methods for converting between entity models and DTOs, as well as applying updates and normalizations related to invoicing data."}], "methods": [{"name": "toPartnerResponse", "description": "Maps a Partner entity object to a PartnerResponse DTO."}, {"name": "toTemplateResponse", "description": "Maps a Template entity object to a TemplateResponse DTO."}, {"name": "toInvoiceResponse", "description": "Maps an Invoice entity object to an InvoiceResponse DTO."}, {"name": "applyInvoiceItemFromRequest", "description": "Updates or sets fields on an InvoiceItem entity from a corresponding request DTO."}, {"name": "applyInvoiceUpdateFromRequest", "description": "Updates basic fields of an Invoice entity based on an update request DTO."}, {"name": "setDefaultInvoiceStatusIfMissing", "description": "Ensures an Invoice has a default status if none is set."}, {"name": "normalizeMoney", "description": "Normalizes monetary fields in an Invoice to zero if they are null to prevent NullPointerExceptions."}], "calls": ["p.getId()", "p.getName()", "p.getLegalName()", "p.getEmail()", "p.getPhone()", "p.getCity()", "p.getCountry()", "p.isDeleted()", "t.getId()", "t.getPartner()", "t.getName()", "t.getTemplateType()", "t.isDefault()", "inv.getId()", "inv.getInvoiceNumber()", "inv.getCurrency()", "inv.getIssueDate()", "inv.getDueDate()", "inv.getStatus()", "inv.getSubtotalAmount()", "inv.getTaxAmount()", "inv.getDiscountAmount()", "inv.getTotalAmount()", "item.setItemName()", "item.setItemDescription()", "item.setQuantity()", "item.setUnitPrice()", "item.recalcLineTotal()", "invoice.setInvoiceNumber()", "invoice.setCurrency()", "invoice.setIssueDate()", "invoice.setDueDate()", "invoice.setStatus()", "invoice.setTaxAmount()", "invoice.setDiscountAmount()", "invoice.setNotes()", "invoice.getStatus()", "invoice.setStatus(InvoiceStatus.DRAFT)", "invoice.getSubtotalAmount()", "invoice.setSubtotalAmount()", "invoice.getTaxAmount()", "invoice.setTaxAmount()", "invoice.getDiscountAmount()", "invoice.setDiscountAmount()", "invoice.getTotalAmount()", "invoice.setTotalAmount()"], "search-terms": ["DtoMappers", "Entity to DTO mapping", "Invoice response mapping", "Partner to response", "Template to response", "Invoice update application", "Money normalization", "Invoice status defaulting"], "state": 2, "file_id": 54, "knowledge_revision": 116, "git_revision": "", "hash": "43af03c70d344d76705eaacf8ec6d1b3", "format-version": 4, "code-base-name": "invoice_backend", "filename": "invoice_backend/src/main/java/com/example/invoicebackend/web/mapper/DtoMappers.java", "revision_history": [{"116": ""}]}