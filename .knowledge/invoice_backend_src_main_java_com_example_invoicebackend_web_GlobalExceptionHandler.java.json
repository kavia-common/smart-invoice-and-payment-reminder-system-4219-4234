{"is_source_file": true, "format": "Java", "description": "This Java source file is a Spring Boot @RestControllerAdvice for global exception handling, providing consistent error responses for various exceptions in the application.", "external_files": ["org.springframework.http.HttpStatus", "org.springframework.http.ResponseEntity", "org.springframework.security.authentication.BadCredentialsException", "org.springframework.security.core.userdetails.UsernameNotFoundException", "org.springframework.validation.FieldError", "org.springframework.web.bind.MethodArgumentNotValidException", "org.springframework.web.bind.MissingServletRequestParameterException", "org.springframework.web.bind.annotation.*", "org.springframework.web.method.annotation.MethodArgumentTypeMismatchException", "jakarta.validation.ConstraintViolation", "jakarta.validation.ConstraintViolationException", "java.time.Instant", "java.util.HashMap", "java.util.Map"], "external_methods": ["body(HttpStatus, String)"], "published": ["handleBadCreds", "handleNotFound", "handleValidation", "handleConstraintViolation", "handleTypeMismatch", "handleMissingParam", "handleIllegalArg", "handleGeneric", "handleUploadTooLarge"], "classes": [{"name": "GlobalExceptionHandler", "description": "Centralized exception handler for processing various runtime exceptions and returning standardized HTTP responses."}], "methods": [{"name": "body", "description": "Constructs a response body as a Map with timestamp, status, error, and message."}, {"name": "handleBadCreds", "description": "Handles BadCredentialsException, returns 401 Unauthorized."}, {"name": "handleNotFound", "description": "Handles UsernameNotFoundException, returns 401 Unauthorized with 'Invalid credentials'."}, {"name": "handleValidation", "description": "Handles MethodArgumentNotValidException, returns 400 with validation errors."}, {"name": "handleConstraintViolation", "description": "Handles ConstraintViolationException, returns 400 with constraint violation details."}, {"name": "handleTypeMismatch", "description": "Handles MethodArgumentTypeMismatchException, returns 400 with parameter mismatch info."}, {"name": "handleMissingParam", "description": "Handles MissingServletRequestParameterException, returns 400 when a required parameter is missing."}, {"name": "handleIllegalArg", "description": "Handles IllegalArgumentException, returns 400."}, {"name": "handleGeneric", "description": "Handles all other exceptions, returns 500 Internal Server Error."}, {"name": "handleUploadTooLarge", "description": "Handles MaxUploadSizeExceededException, returns 413 Payload Too Large."}], "calls": ["body(HttpStatus, String)", "ResponseEntity.status(HttpStatus).body(Map)"], "search-terms": ["GlobalExceptionHandler", "Spring Boot exception handling", "REST error responses", "ConstraintViolationException handling", "MethodArgumentNotValidException handling"], "state": 2, "file_id": 23, "knowledge_revision": 159, "git_revision": "8dcac123c8f229ab5940457646842b42031e5f73", "revision_history": [{"50": ""}, {"129": "0ef0ff1154251927a773eb2426480ff608f6ad87"}, {"159": "8dcac123c8f229ab5940457646842b42031e5f73"}], "hash": "32ebe4671ed768e3306eb3e33ad5e828", "format-version": 4, "code-base-name": "invoice_backend", "filename": "invoice_backend/src/main/java/com/example/invoicebackend/web/GlobalExceptionHandler.java"}