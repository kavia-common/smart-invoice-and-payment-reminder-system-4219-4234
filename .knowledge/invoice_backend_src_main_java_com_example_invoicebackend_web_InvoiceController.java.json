{"is_source_file": true, "format": "Java", "description": "Spring Boot REST controller for managing invoices, including CRUD operations, listing, searching, and generating invoice numbers.", "external_files": ["com.example.invoicebackend.model.Invoice", "com.example.invoicebackend.model.enums.InvoiceStatus", "com.example.invoicebackend.repository.InvoiceRepository", "com.example.invoicebackend.repository.PartnerRepository", "com.example.invoicebackend.service.InvoiceService", "com.example.invoicebackend.web.dto.InvoiceDtos.InvoiceCreateRequest", "com.example.invoicebackend.web.dto.InvoiceDtos.InvoiceResponse", "com.example.invoicebackend.web.dto.InvoiceDtos.InvoiceUpdateRequest", "com.example.invoicebackend.web.mapper.DtoMappers", "io.swagger.v3.oas.annotations.Operation", "io.swagger.v3.oas.annotations.tags.Tag", "jakarta.validation.Valid", "org.springframework.data.domain.PageImpl", "org.springframework.data.domain.PageRequest", "org.springframework.format.annotation.DateTimeFormat", "org.springframework.http.ResponseEntity", "org.springframework.security.access.prepost.PreAuthorize", "org.springframework.web.bind.annotation.*", "java.time.LocalDate", "java.util.Comparator", "java.util.List", "java.util.Objects", "java.util.stream.Collectors"], "external_methods": ["DtoMappers.toInvoiceResponse", "invoiceService.create", "invoiceService.find", "invoiceService.update", "invoiceService.softDelete", "invoiceService.listByPartner", "invoiceRepository.findByPartnerAndStatusAndDeletedFalse", "invoiceRepository.findByPartnerAndDueDateBeforeAndDeletedFalse", "invoiceRepository.findByPartnerAndDeletedFalse", "partnerRepository.findById"], "published": ["create", "get", "update", "delete", "listByPartner", "search", "generateNumber"], "classes": [{"name": "InvoiceController", "description": "Spring Boot REST controller providing endpoints for invoice management, including creating, retrieving, updating, deleting, listing, searching, and generating invoice numbers."}], "methods": [{"name": "create", "description": "Creates a new invoice based on the provided request data, accessible by authenticated users with roles ADMIN, MANAGER, or USER."}, {"name": "get", "description": "Retrieves an invoice by its ID. Accessible by authenticated users with roles ADMIN, MANAGER, or USER."}, {"name": "update", "description": "Updates an existing invoice identified by ID with new data. Accessible by users with roles ADMIN or MANAGER."}, {"name": "delete", "description": "Soft deletes an invoice identified by ID. Accessible by users with roles ADMIN or MANAGER."}, {"name": "listByPartner", "description": "Lists invoices for a specific partner with optional filters such as status, customer ID, issue date range, and pagination."}, {"name": "search", "description": "Searches invoices by partner, optionally filtering by status or due date before a specified date."}, {"name": "generateNumber", "description": "Generates the next invoice number for a given partner based on current invoice count."}], "calls": ["DtoMappers.toInvoiceResponse", "invoiceService.create", "invoiceService.find", "invoiceService.update", "invoiceService.softDelete", "invoiceService.listByPartner", "invoiceRepository.findByPartnerAndStatusAndDeletedFalse", "invoiceRepository.findByPartnerAndDueDateBeforeAndDeletedFalse", "invoiceRepository.findByPartnerAndDeletedFalse", "partnerRepository.findById"], "search-terms": ["InvoiceController", "Invoice CRUD endpoints", "listByPartner filtering", "search invoices", "generate invoice number", "soft delete invoice", "invoice API", "REST invoice controller"], "state": 2, "file_id": 60, "knowledge_revision": 128, "git_revision": "", "hash": "c46d87c4cf9371e0cdd1f5b24b48f6ec", "format-version": 4, "code-base-name": "invoice_backend", "filename": "invoice_backend/src/main/java/com/example/invoicebackend/web/InvoiceController.java", "revision_history": [{"128": ""}]}