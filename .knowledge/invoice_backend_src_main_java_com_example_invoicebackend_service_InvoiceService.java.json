{"is_source_file": true, "format": "Java", "description": "This Java source file defines a service class 'InvoiceService' responsible for creating, updating, retrieving, and soft-deleting invoices within a backend system. It includes business logic such as checksum calculations, validation, and event publishing for invoice status changes.", "external_files": ["com/example/invoicebackend/model/Invoice.java", "com/example/invoicebackend/model/Partner.java", "com/example/invoicebackend/model/Customer.java", "com/example/invoicebackend/model/Template.java", "com/example/invoicebackend/model/InvoiceItem.java", "com/example/invoicebackend/model/enums/InvoiceStatus.java", "com/example/invoicebackend/repository/InvoiceRepository.java", "com/example/invoicebackend/repository/PartnerRepository.java", "com/example/invoicebackend/repository/CustomerRepository.java", "com/example/invoicebackend/repository/TemplateRepository.java", "com/example/invoicebackend/repository/InvoiceItemRepository.java", "com/example/invoicebackend/web/mapper/DtoMappers.java", "com/example/invoicebackend/web/dto/InvoiceDtos.java", "com/example/invoicebackend/web/dto/InvoiceCreateRequest.java", "com/example/invoicebackend/web/dto/InvoiceUpdateRequest.java", "com/example/invoicebackend/web/WebhookService.java"], "external_methods": ["partners.findById()", "customers.findById()", "templates.findById()", "invoices.findByPartnerAndInvoiceNumber()", "invoices.save()", "invoices.findById()", "webhookService.publishInvoiceStatusChange()", "DtoMappers.applyInvoiceItemFromRequest()", "DtoMappers.applyInvoiceUpdateFromRequest()", "DtoMappers.setDefaultInvoiceStatusIfMissing()", "inv.recalcTotals()", "DtoMappers.normalizeMoney()"], "published": ["com.example.invoicebackend.service.InvoiceService"], "classes": [{"name": "InvoiceService", "description": "Service class handling invoice business logic including creation, update, retrieval, and soft deletion."}], "methods": [{"name": "create", "description": "Creates a new invoice based on the provided request, including items, totals calculation, and event publishing."}, {"name": "update", "description": "Updates an existing invoice, potentially replacing items, recalculating totals, and publishing status change events."}, {"name": "find", "description": "Retrieves an invoice by its ID."}, {"name": "listByPartner", "description": "Lists all non-deleted invoices associated with a particular partner."}, {"name": "softDelete", "description": "Marks an invoice as deleted without removing it from the database."}], "calls": ["partners.findById()", "customers.findById()", "templates.findById()", "invoices.findByPartnerAndInvoiceNumber()", "invoices.save()", "invoices.findById()", "webhookService.publishInvoiceStatusChange()", "DtoMappers.applyInvoiceItemFromRequest()", "DtoMappers.applyInvoiceUpdateFromRequest()", "DtoMappers.setDefaultInvoiceStatusIfMissing()", "inv.recalcTotals()", "DtoMappers.normalizeMoney()"], "search-terms": ["InvoiceService", "create invoice", "update invoice", "soft delete invoice", "invoice status change", "InvoiceRepository", "webhook publish", "invoice items handling"], "state": 2, "file_id": 57, "knowledge_revision": 174, "git_revision": "e04440def708b6309a5329675f0f3f0f62c646c7", "revision_history": [{"122": ""}, {"174": "e04440def708b6309a5329675f0f3f0f62c646c7"}], "hash": "de81ae84f70eabf391e28555182e17ca", "format-version": 4, "code-base-name": "invoice_backend", "filename": "invoice_backend/src/main/java/com/example/invoicebackend/service/InvoiceService.java"}